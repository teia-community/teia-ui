resolver 1.1.1.1 ipv6=off;
server_tokens off;
lua_package_path '/lua/?.lua;;';

server {
    listen 80 default;
    index index.html index.htm index.nginx-debian.html;
    gzip              on;
    gzip_vary         on;
    gzip_types        # text/html is always compressed by HttpGzipModule
                        text/css
                        application/javascript
                        font/truetype
                        font/opentype
                        application/vnd.ms-fontobject
                        image/svg+xml;
    gzip_min_length   1000; # default is 20 bytes
    gzip_buffers      16 8k;
    gzip_comp_level   2; # default is 1

    tcp_nopush                on; # send headers in one piece
    tcp_nodelay               on; # don't buffer data sent, good for small data bursts in real time

    root /usr/local/openresty/nginx/html;
    include /header.conf;

    expires 30d;
    add_header Pragma "public";
    add_header Cache-Control "public";

    location = /favicon.ico {
        root /usr/local/openresty/nginx/html/icons;
    }

    location = /index.html {
        include /header.conf;
        add_header Cache-Control no-store always;
    }

    location / {
        include /header.conf;
        add_header Cache-Control no-store always;
        try_files $uri $uri/ /index.html =404;
    }

    proxy_ssl_server_name on;
    proxy_pass_request_headers off;

    location ^~ /teztok/ {
        internal; # Specifies that a given location can only be used for internal requests
        proxy_set_header Content-Type "application/json";
        proxy_set_header Accept "application/json";
        proxy_pass https://teztok.teia.rocks/; # trailing slash
    }

    location ^~ /teia/ {
        internal;
        proxy_pass http://localhost:8080/; # trailing slash
    }

    location ~ "^/objkt/([0-9]+)" {
        default_type  text/html;
        header_filter_by_lua_block { ngx.header.content_length = nil }
        content_by_lua_block {
            local res = ngx.location.capture('/teia' .. ngx.var.uri)
            local body = res.body
            local previews = require "previews"
            local ok, content = pcall(previews.findTokenDetails, ngx.var[1])
            if ok and content then
                body = previews.injectOpenGraphTags(body, content)
            end
            ngx.print(body)
        }
        include /header.conf;
    }

    location ~ "^/tz/(tz[a-zA-Z0-9]{34})" {
        default_type  text/html;
        header_filter_by_lua_block { ngx.header.content_length = nil }
        content_by_lua_block {
            local res = ngx.location.capture('/teia' .. ngx.var.uri)
            local body = res.body
            local previews = require "previews"
            local ok, content = pcall(previews.findProfileDetails, ngx.var[1])
            if ok and content then
                body = previews.injectOpenGraphTags(body, content)
            end
            ngx.print(body)
        }
        include /header.conf;
    }

    location ~ "^/([0-9a-zA-Z\-_\ \.]+)" {
        default_type  text/html;
        header_filter_by_lua_block { ngx.header.content_length = nil }
        content_by_lua_block {
            local res = ngx.location.capture('/teia' .. ngx.var.uri)
            local body = res.body
            local previews = require "previews"
            local ok, content = pcall(previews.findProfileDetails, ngx.var[1])
            if ok and content then
                body = previews.injectOpenGraphTags(body, content)
            end
            ngx.print(body)
        }
        include /header.conf;
    }

    location ^~ /static/ {}
    location ^~ /assets/ {}
    location ^~ /icons/ {
        default_type  application/json;
    }
}

server {
    listen 8080;
    root /usr/local/openresty/nginx/html;
    include /header.conf;
    location / {
        include /header.conf;
        try_files $uri $uri/ /index.html =404;
    }
}